version: "3.8"

services:

  service-registry:
    image: frogdevelopment/service-registry:master
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.size == small
    healthcheck:
      test: ["CMD", "curl", "localhost:8081/actuator/health 2>&1 | grep UP || exit 1"]
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - pond
    secrets:
      - frog_admin_user
      - frog_admin_password
    environment:
      TZ: Europe/Paris
      VIRTUAL_PORT: 8080
      VIRTUAL_HOST: registry.frog-development.com
      LETSENCRYPT_HOST: registry.frog-development.com

  service-administration:
    image: frogdevelopment/service-administration:master
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.size == small
    healthcheck:
      test: ["CMD", "curl", "localhost:8081/actuator/health 2>&1 | grep UP || exit 1"]
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 40s
    depends_on:
      - service-registry
    networks:
      - pond
    secrets:
      - frog_admin_user
      - frog_admin_password
      - slack_webhook
    environment:
      TZ: Europe/Paris
      VIRTUAL_PORT: 8080
      VIRTUAL_HOST: boot-admin.frog-development.com
      LETSENCRYPT_HOST: boot-admin.frog-development.com

  service-config:
    image: frogdevelopment/service-config:feature_docker_secrets_repository
    deploy:
        mode: replicated
        replicas: 1
        placement:
          constraints:
            - node.labels.size == large
    healthcheck:
      test: ["CMD", "curl", "localhost:8081/actuator/health 2>&1 | grep UP || exit 1"]
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 40s
    depends_on:
      - service-registry
    networks:
      - pond
    secrets:
      - git_uri
      - frog_admin_user
      - frog_admin_password
      - jwt_signing_key
      - postgres_user
      - postgres_password
    environment:
      TZ: Europe/Paris
      GIT_LABEL: master
    volumes:
      - /root/.ssh:/root/.ssh

  service-gateway:
    image: frogdevelopment/service-gateway:master
    deploy:
        mode: replicated
        replicas: 1
        placement:
          constraints:
            - node.labels.size == small
    healthcheck:
      test: ["CMD", "curl", "localhost:8081/actuator/health 2>&1 | grep UP || exit 1"]
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 40s
    depends_on:
      - service-registry
    networks:
      - pond
    secrets:
      - frog_admin_user
      - frog_admin_password
    environment:
      TZ: Europe/Paris
      VIRTUAL_PORT: 8080
      VIRTUAL_HOST: gateway.frog-development.com
      LETSENCRYPT_HOST: gateway.frog-development.com

secrets:
  frog_admin_user:
    external: true
  frog_admin_password:
    external: true
  frog_admin_email:
    external: true
  slack_webhook:
    external: true
  jwt_signing_key:
    external: true
  git_uri:
    external: true
  postgres_user:
    external: true
  postgres_password:
    external: true

networks:
  pond:
    external: true
    name: pond
