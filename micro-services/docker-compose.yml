version: "3.7"

services:

# tools
  postgres:
    container_name: postgres
    image: groonga/pgroonga:2.2.1-alpine-11-slim
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d

#  pgAdmin:
#    container_name: pgAdmin_frog
#    image: dpage/pgadmin4:4.12
#    restart: always
#    ports:
#      - 90:80
#    depends_on:
#      - postgres
#    environment:
#      PGADMIN_DEFAULT_EMAIL: frog-development-it@gmail.com
#      PGADMIN_DEFAULT_PASSWORD: postgres

# support
  service-registry:
    container_name: service-registry
    image: frogdevelopment/service-registry:1.0.1-SNAPSHOT
    volumes:
      - /tmp/service-registry:/tmp
      - logs:/var/log
    restart: always
    environment:
      TZ: ${TIME_ZONE}
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}

  service-administration:
    container_name: service-administration
    image: frogdevelopment/service-administration:1.0.1-SNAPSHOT
    expose:
      - 8080
    volumes:
      - /tmp/service-administration:/tmp
      - logs:/var/log
    restart: always
    links:
      - service-registry
    environment:
      TZ: ${TIME_ZONE}
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      VIRTUAL_HOST: boot-admin.frog-development.com
      LETSENCRYPT_HOST: boot-admin.frog-development.com
      LETSENCRYPT_EMAIL: frog-development-it@gmail.com
      WEBHOOK_URL: ${WEBHOOK_URL}

  service-config:
    container_name: service-config
    image: frogdevelopment/service-config:1.0.1-SNAPSHOT
    volumes:
      - /tmp/service-config:/tmp
      - logs:/var/log
      - /root/.ssh:/root/.ssh
    restart: always
    depends_on:
      - service-registry
    environment:
      TZ: ${TIME_ZONE}
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE},git
      GIT_URI: ${GIT_URI}
      GIT_LABEL: ${GIT_LABEL}

  service-gateway:
    container_name: service-gateway
    image: frogdevelopment/service-gateway:master
    expose:
      - 8080
    volumes:
      - /tmp/service-gateway:/tmp
      - logs:/var/log
    restart: always
    depends_on:
      - service-registry
    environment:
      TZ: ${TIME_ZONE}
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      SIGNING_KEY: ${JWT_SIGNING_KEY}
      VIRTUAL_HOST: gateway.frog-development.com
      LETSENCRYPT_HOST: gateway.frog-development.com
      LETSENCRYPT_EMAIL: frog-development-it@gmail.com

# services
  authentication-service:
    container_name: authentication-service
    image: frogdevelopment/authentication-service:fix_authentication
    volumes:
      - /tmp/authentication-service:/tmp
      - databases:/opt/db
      - logs:/var/log
    restart: always
    depends_on:
      - service-registry
    environment:
      TZ: ${TIME_ZONE}
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE},postgres
      SIGNING_KEY: ${JWT_SIGNING_KEY}

  nihongo-dico-entries-service:
    container_name: nihongo-dico-entries-service
    image: frogdevelopment/nihongo-dico-entries-service:fix_search
    volumes:
      - /tmp/nihongo-dico-entries-service:/tmp
      - logs:/var/log
    restart: always
    depends_on:
#      - authentication-service
      - service-registry
      - postgres
    environment:
      TZ: ${TIME_ZONE}
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE},postgres
      SIGNING_KEY: ${JWT_SIGNING_KEY}

  nihongo-dico-sentences-service:
    container_name: nihongo-dico-sentences-service
    image: frogdevelopment/nihongo-dico-sentences-service:feature_improve
    volumes:
      - /tmp/nihongo-dico-sentences-service:/tmp
      - logs:/var/log
    restart: always
    depends_on:
#      - authentication-service
      - service-registry
      - postgres
    environment:
      TZ: ${TIME_ZONE}
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE},postgres
      SIGNING_KEY: ${JWT_SIGNING_KEY}

#  nihongo-lesson-service:
#    container_name: nihongo-lesson-service
#    image: frogdevelopment/nihongo-lesson-service:master
#    volumes:
#      - databases:/opt/db
#      - logs:/var/log
#    restart: always
#    depends_on:
#      - service-registry
#    environment:
#      TZ: ${TIME_ZONE}
#      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE},postgres
#      SIGNING_KEY: ${JWT_SIGNING_KEY}

#  book-search-service:
#    container_name: book-search-service
#    image: frogdevelopment/book-search-service:master
#    volumes:
#      - logs:/var/log
#    restart: always
#    depends_on:
#      - service-registry
#    environment:
#      TZ: ${TIME_ZONE}
#      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE},postgres
#      SIGNING_KEY: ${JWT_SIGNING_KEY}

#  nihongo-dico-web:
#    container_name: nihongo-dico-web
#    image: frogdevelopment/nihongo-dico-web:master
#    expose:
#      - 80
#    restart: always
#    depends_on:
#      - service-gateway
#    environment:
#      VIRTUAL_HOST: www.nihongo-dico.frog-development.com
#      LETSENCRYPT_HOST: www.nihongo-dico.frog-development.com
#      LETSENCRYPT_EMAIL: frog-development-it@gmail.com

  frog-manager-web:
    container_name: frog-manager-web
    image: frogdevelopment/frog-manager-web:master
    expose:
      - 80
    restart: always
    depends_on:
      - service-gateway
    environment:
      VIRTUAL_HOST: manager.frog-development.com
      LETSENCRYPT_HOST: manager.frog-development.com
      LETSENCRYPT_EMAIL: frog-development-it@gmail.com

#  postgres:
#    container_name: postgres
#    image: postgres:11.4-alpine
#    restart: always
#    expose:
#      - 5432
#    ports:
#      - 5432:5432
#    environment:
#      POSTGRES_USER: ${POSTGRES_USER}
#      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#    volumes:
#      - postgres_data:/var/lib/postgresql/data
#      - ./postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d

volumes:
  databases:
  postgres_data:
  logs:

networks:
  default:
    name: frog_ms
