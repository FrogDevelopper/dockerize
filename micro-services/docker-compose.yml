version: "3.7"

services:

  #  rabbit-mq:
  #    container_name: rabbit-mq
  #    image: rabbitmq:3-management
  #    hostname: rabbit-mq
  #    ports:
  #      - 7100:5672
  #    volumes:
  #      - rabbitmq:/var/lib/rabbitmq
  #    #      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
  #    #      restart: always
  #    environment:
  #      RABBITMQ_DEFAULT_USER: user
  #      RABBITMQ_DEFAULT_PASS: password

  service-registry:
    container_name: service-registry
    image: frogdevelopment/service-registry:1.0.0
    volumes:
      - logs:/var/log
    restart: always
    environment:
      TZ: ${TIME_ZONE}
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}

  service-administration:
    container_name: service-administration
    image: frogdevelopment/service-administration:1.0.0
    expose:
      - 8080
    volumes:
      - logs:/var/log
    restart: always
    links:
      - service-registry
    environment:
      TZ: ${TIME_ZONE}
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      VIRTUAL_HOST: boot-admin.frog-development.com
      LETSENCRYPT_HOST: boot-admin.frog-development.com
      LETSENCRYPT_EMAIL: frog-development-it@gmail.com
      WEBHOOK_URL: ${WEBHOOK_URL}

  service-config:
    container_name: service-config
    image: frogdevelopment/service-config:1.0.0
    volumes:
      - logs:/var/log
      - /root/.ssh:/root/.ssh
    restart: always
    depends_on:
      - service-registry
    environment:
      TZ: ${TIME_ZONE}
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE},git
      GIT_URI: ${GIT_URI}
      GIT_LABEL: ${GIT_LABEL}

  service-gateway:
    container_name: service-gateway
    image: frogdevelopment/service-gateway:master
    expose:
      - 8080
    volumes:
      - logs:/var/log
    restart: always
    depends_on:
      - service-config
      - service-registry
    environment:
      TZ: ${TIME_ZONE}
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      SIGNING_KEY: ${JWT_SIGNING_KEY}
      VIRTUAL_HOST: gateway.frog-development.com
      LETSENCRYPT_HOST: gateway.frog-development.com
      LETSENCRYPT_EMAIL: frog-development-it@gmail.com

  authentication-service:
    container_name: authentication-service
    image: frogdevelopment/authentication-service:fix_authentication
    volumes:
      - databases:/opt/db
      - logs:/var/log
    restart: always
    depends_on:
      - service-config
      - service-registry
    environment:
      TZ: ${TIME_ZONE}
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      SIGNING_KEY: ${JWT_SIGNING_KEY}

  nihongo-lesson-service:
    container_name: nihongo-lesson-service
    image: frogdevelopment/nihongo-lesson-service:master
    volumes:
      - databases:/opt/db
      - logs:/var/log
    restart: always
    depends_on:
      - service-config
      - service-registry
    environment:
      TZ: ${TIME_ZONE}
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      SIGNING_KEY: ${JWT_SIGNING_KEY}

  #  nihongo-dico-service:
  #    container_name: nihongo-dico-service
  #    image: frogdevelopment/nihongo-dico-service:master
  #    volumes:
  #      - databases:/opt/db
  #      - logs:/var/log
  #    restart: always
  #    depends_on:
  #      - service-config
  #      - service-registry
  #    environment:
  #      TZ: ${TIME_ZONE}
  #      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
  #      SIGNING_KEY: ${JWT_SIGNING_KEY}

  nihongo-dico-populate-service:
    container_name: nihongo-dico-populate-service
    image: frogdevelopment/nihongo-dico-populate-service:master
    volumes:
      - databases:/opt/db
      - logs:/var/log
    restart: always
    depends_on:
      - service-config
      - service-registry
    environment:
      TZ: ${TIME_ZONE}
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      SIGNING_KEY: ${JWT_SIGNING_KEY}

  nihongo-sentence-populate-service:
    container_name: nihongo-sentence-populate-service
    image: frogdevelopment/nihongo-sentence-populate-service:master
    volumes:
      - databases:/opt/db
      - logs:/var/log
    restart: always
    depends_on:
      - service-config
      - service-registry
    environment:
      TZ: ${TIME_ZONE}
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      SIGNING_KEY: ${JWT_SIGNING_KEY}

    #  book-search-service:
    #    container_name: book-search-service
    #    image: frogdevelopment/book-search-service:master
    #    volumes:
    #      - logs:/var/log
    #    restart: always
    #    depends_on:
    #      - service-config
    #      - service-registry
    #    environment:
    #      TZ: ${TIME_ZONE}
    #      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
    #      SIGNING_KEY: ${JWT_SIGNING_KEY}

  nihongo-dico-web:
    container_name: nihongo-dico-web
    image: frogdevelopment/nihongo-dico-web:master
    expose:
      - 80
    restart: always
    depends_on:
      - service-gateway
    environment:
      VIRTUAL_HOST: www.nihongo-dico.frog-development.com
      LETSENCRYPT_HOST: www.nihongo-dico.frog-development.com
      LETSENCRYPT_EMAIL: frog-development-it@gmail.com

  frog-manager-web:
    container_name: frog-manager-web
    image: frogdevelopment/frog-manager-web:master
    expose:
      - 80
    restart: always
    depends_on:
      - service-gateway
    environment:
      VIRTUAL_HOST: manager.frog-development.com
      LETSENCRYPT_HOST: manager.frog-development.com
      LETSENCRYPT_EMAIL: frog-development-it@gmail.com

  postgres:
    container_name: postgres
    image: postgres:11.4-alpine
    restart: always
    expose:
      - 5432
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data

  pgAdmin:
    container_name: pgAdmin
    image: dpage/pgadmin4:4.11
    restart: always
    ports:
      - 90:80
    depends_on:
      - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: frog-development-it@gmail.com
      PGADMIN_DEFAULT_PASSWORD: postgres

volumes:
  databases:
  postgres_data:
  logs:
#  rabbitmq:

networks:
  default:
    external:
      name: frog_ms
