version: "3.7"

services:

  service-registry:
    image: frogdevelopment/service-registry:master
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.size == large
    healthcheck:
      #      test: ["CMD", "curl", "--fail", "--silent", "${FROG_ADMIN_USER}:${FROG_ADMIN_PWD}@localhost:8081/actuator/health 2>&1 | grep UP || exit 1"]
      test: ["CMD", "curl", "${FROG_ADMIN_USER}:${FROG_ADMIN_PWD}@localhost:8081/actuator/health 2>&1 | grep UP || exit 1"]
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 10s
#    ports:
#      - 8761:8080
    networks:
      - pond
    environment:
      TZ: ${TIME_ZONE}
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      FROG_ADMIN_USER: ${FROG_ADMIN_USER}
      FROG_ADMIN_PWD: ${FROG_ADMIN_PWD}
      VIRTUAL_HOST: registry.frog-development.com
      LETSENCRYPT_HOST: registry.frog-development.com
      LETSENCRYPT_EMAIL: ${FROG_ADMIN_EMAIL}

  service-administration:
    image: frogdevelopment/service-administration:master
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.size == small
    healthcheck:
      test: ["CMD", "curl", "${FROG_ADMIN_USER}:${FROG_ADMIN_PWD}@localhost:8081/actuator/health 2>&1 | grep UP || exit 1"]
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 40s
    depends_on:
      - service-registry
#    ports:
#      - 8080:8080
    networks:
      - pond
    environment:
      TZ: ${TIME_ZONE}
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      VIRTUAL_HOST: boot-admin.frog-development.com
      LETSENCRYPT_HOST: boot-admin.frog-development.com
      LETSENCRYPT_EMAIL: ${FROG_ADMIN_EMAIL}
      WEBHOOK_URL: ${WEBHOOK_URL}
      FROG_ADMIN_USER: ${FROG_ADMIN_USER}
      FROG_ADMIN_PWD: ${FROG_ADMIN_PWD}

  service-config:
    image: frogdevelopment/service-config:master
    deploy:
        mode: replicated
        replicas: 1
        placement:
          constraints:
            - node.labels.size == large
    volumes:
      - /root/.ssh:/root/.ssh
    healthcheck:
      test: ["CMD", "curl", "${FROG_ADMIN_USER}:${FROG_ADMIN_PWD}@localhost:8081/actuator/health 2>&1 | grep UP || exit 1"]
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 40s
    depends_on:
      - service-registry
    networks:
      - pond
    environment:
      TZ: ${TIME_ZONE}
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE},git
      GIT_URI: ${GIT_URI}
      GIT_LABEL: ${GIT_LABEL}
      FROG_ADMIN_USER: ${FROG_ADMIN_USER}
      FROG_ADMIN_PWD: ${FROG_ADMIN_PWD}

  service-gateway:
    image: frogdevelopment/service-gateway:master
    deploy:
        mode: replicated
        replicas: 1
        placement:
          constraints:
            - node.labels.size == small
    healthcheck:
      test: ["CMD", "curl", "localhost:8081/actuator/health 2>&1 | grep UP || exit 1"]
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 40s
    depends_on:
      - service-registry
    networks:
      - pond
    environment:
      TZ: ${TIME_ZONE}
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      SIGNING_KEY: ${JWT_SIGNING_KEY}
      VIRTUAL_HOST: gateway.frog-development.com
      LETSENCRYPT_HOST: gateway.frog-development.com
      LETSENCRYPT_EMAIL: ${FROG_ADMIN_EMAIL}
      FROG_ADMIN_USER: ${FROG_ADMIN_USER}
      FROG_ADMIN_PWD: ${FROG_ADMIN_PWD}

networks:
  pond:
    external: true
    name: pond
