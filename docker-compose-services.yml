version: "3.7"

services:

  authentication-service:
    image: frogdevelopment/authentication-service:feature_docker_secrets
    deploy:
        mode: replicated
        replicas: 1
        placement:
          constraints:
            - node.labels.size == large
    healthcheck:
      test: ["CMD", "curl", "localhost:8081/actuator/health 2>&1 | grep UP || exit 1"]
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 40s
    networks:
      - pond
    environment:
      TZ: Europe/Paris
      SPRING_PROFILES_ACTIVE: production,dev,postgres
      SIGNING_KEY: ${JWT_SIGNING_KEY}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      FROG_ADMIN_USER: ${FROG_ADMIN_USER}
      FROG_ADMIN_PWD: ${FROG_ADMIN_PWD}

#  nihongo-dico-entries-service:
#    image: frogdevelopment/nihongo-dico-entries-service:feature_docker_secrets
#    deploy:
#        mode: replicated
#        replicas: 1
#        placement:
#          constraints:
#            - node.labels.size == large
#    healthcheck:
#      test: ["CMD", "curl", "localhost:8081/actuator/health 2>&1 | grep UP || exit 1"]
#      interval: 20s
#      timeout: 5s
#      retries: 5
#      start_period: 40s
#    networks:
#      - pond
#    environment:
#      TZ: Europe/Paris
#      SPRING_PROFILES_ACTIVE: production,dev,postgres
#      SIGNING_KEY: ${JWT_SIGNING_KEY}
#      DB_USER: ${POSTGRES_USER}
#      DB_PASSWORD: ${POSTGRES_PASSWORD}
#      FROG_ADMIN_USER: ${FROG_ADMIN_USER}
#      FROG_ADMIN_PWD: ${FROG_ADMIN_PWD}
#
#  nihongo-dico-sentences-service:
#    image: frogdevelopment/nihongo-dico-sentences-service:feature_docker_secrets
#    deploy:
#        mode: replicated
#        replicas: 1
#        placement:
#          constraints:
#            - node.labels.size == large
#    healthcheck:
#      test: ["CMD", "curl", "localhost:8081/actuator/health 2>&1 | grep UP || exit 1"]
#      interval: 20s
#      timeout: 5s
#      retries: 5
#      start_period: 40s
#    depends_on:
#      - authentication-service
#    networks:
#      - pond
#    environment:
#      TZ: Europe/Paris
#      SPRING_PROFILES_ACTIVE: production,dev,postgres
#      SIGNING_KEY: ${JWT_SIGNING_KEY}
#      DB_USER: ${POSTGRES_USER}
#      DB_PASSWORD: ${POSTGRES_PASSWORD}
#      FROG_ADMIN_USER: ${FROG_ADMIN_USER}
#      FROG_ADMIN_PWD: ${FROG_ADMIN_PWD}
#
#  nihongo-lessons-service:
#    image: frogdevelopment/nihongo-lessons-service:feature_docker_secrets
#    deploy:
#        mode: replicated
#        replicas: 1
#        placement:
#          constraints:
#            - node.labels.size == large
#    healthcheck:
#      test: ["CMD", "curl", "localhost:8081/actuator/health 2>&1 | grep UP || exit 1"]
#      interval: 20s
#      timeout: 5s
#      retries: 5
#      start_period: 40s
#    depends_on:
#      - authentication-service
#    networks:
#      - pond
#    environment:
#      TZ: Europe/Paris
#      SPRING_PROFILES_ACTIVE: production,dev,postgres
#      SIGNING_KEY: ${JWT_SIGNING_KEY}
#      DB_USER: ${POSTGRES_USER}
#      DB_PASSWORD: ${POSTGRES_PASSWORD}
#      FROG_ADMIN_USER: ${FROG_ADMIN_USER}
#      FROG_ADMIN_PWD: ${FROG_ADMIN_PWD}

#  book-search-service:
#    image: frogdevelopment/book-search-service:master
#    volumes:
#      - logs:/var/log
#    restart: always
#    networks:
#      - pond
#    environment:
#      TZ: Europe/Paris
#      SPRING_PROFILES_ACTIVE: production,dev,postgres
#      SIGNING_KEY: ${JWT_SIGNING_KEY}

#  nihongo-dico-web:
#    image: frogdevelopment/nihongo-dico-web:latest
#    deploy:
#        mode: replicated
#        replicas: 1
#        placement:
#          constraints:
#            - node.labels.size == small
#    depends_on:
#      - nihongo-dico-entries-service
#      - nihongo-dico-sentences-service
#    networks:
#      - pond
#    environment:
#      VIRTUAL_HOST: www.nihongo-dico.frog-development.com
#      LETSENCRYPT_HOST: www.nihongo-dico.frog-development.com
#
#  frog-manager-web:
#    image: frogdevelopment/frog-manager-web:latest
#    deploy:
#        mode: replicated
#        replicas: 1
#        placement:
#          constraints:
#            - node.labels.size == small
#    depends_on:
#      - nihongo-dico-entries-service
#      - nihongo-dico-sentences-service
#      - nihongo-lessons-service
#    networks:
#      - pond
#    environment:
#      VIRTUAL_HOST: manager.frog-development.com
#      LETSENCRYPT_HOST: manager.frog-development.com

#  ep-service:
#    image: frogdevelopment/ep-service:master
#    deploy:
#      mode: replicated
#      replicas: 1
#      placement:
#        constraints:
#          - node.labels.size == small
#    healthcheck:
#      test: ["CMD", "curl", "localhost:8081/actuator/health 2>&1 | grep UP || exit 1"]
#      interval: 20s
#      timeout: 5s
#      retries: 5
#      start_period: 40s
#    networks:
#      - pond
#    environment:
#      TZ: Europe/Paris
#      SPRING_PROFILES_ACTIVE: production,dev,postgres
#      SIGNING_KEY: ${JWT_SIGNING_KEY}
#      DB_USER: ${POSTGRES_USER}
#      DB_PASSWORD: ${POSTGRES_PASSWORD}
#      FROG_ADMIN_USER: ${FROG_ADMIN_USER}
#      FROG_ADMIN_PWD: ${FROG_ADMIN_PWD}
#      VIRTUAL_PORT: 8080
#      VIRTUAL_HOST: ep.frog-development.com
#      LETSENCRYPT_HOST: ep.frog-development.com


networks:
  pond:
    external: true
    name: pond
